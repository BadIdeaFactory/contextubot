service:
  name: contextubot-worker

provider:
  name: aws
  region: us-east-1
  tags:
    project: contextubot

  runtime: python3.6
  timeout: 300
  stage: dev
  tracing: true

  environment:
    BUCKET_NAME: 'data.contextubot.net'
    PUBNUB_PUB: ${ssm:/contextubot/pubNubPublishKey}
    PUBNUB_SUB: ${ssm:/contextubot/pubNubSubscribeKey}
    PUBNUB_SECRET: ${ssm:/contextubot/pubNubSecretKey}

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::data.contextubot.net'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::data.contextubot.net/*'
    - Effect: 'Allow'
      Action:
        - 'xray:PutTraceSegments'
        - 'xray:PutTelemetryRecords'
      Resource:
        - '*'



package:
  individually: true
  exclude:
    - '*/**'
  include:
    - 'audfprint/*.py'
    - 'audfprint/.requirements.zip'



functions:
  create:
    handler: handler.create
    module: audfprint
    memorySize: 3008
    events:
      - schedule:
          rate: cron(0 1 * * ? *)
          input:
            channel: 'CNNW'
      - schedule:
          rate: cron(0 1 * * ? *)
          input:
            channel: 'MSNBCW'
      - schedule:
          rate: cron(0 1 * * ? *)
          input:
            channel: 'FOXNEWSW'
      - schedule:
          rate: cron(0 1 * * ? *)
          input:
            channel: 'BBCNEWS'

  fingerprint:
    handler: handler.fingerprint
    module: audfprint
    events:
      - existingS3:
          bucket: 'data.contextubot.net'
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: wave/
            - suffix: .wav

  match:
    handler: handler.match
    module: audfprint




custom:
  stages:
    - dev
    - staging
    - prod
  logRetentionInDays: 5
  pythonRequirements:
    dockerizePip: true
    slim: true
    zip: true
    useDownloadCache: true
    useStaticCache: true
  scripts:
    hooks:
      'deploy:finalize': serverless s3deploy




plugins:
  - serverless-plugin-scripts
  - serverless-python-requirements
  - serverless-plugin-log-retention
  - serverless-stage-manager
  - serverless-plugin-existing-s3
  - serverless-plugin-tracing
