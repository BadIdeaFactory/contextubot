service:
  name: contextubot-worker

provider:
  name: aws
  region: us-east-1

  runtime: python3.6
  timeout: 300
  stage: dev

  tags:
    project: contextubot

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::data.contextubot.net/*'

  environment:
    BUCKET_NAME: 'data.contextubot.net'
    PUBNUB_PUB: ${ssm:/contextubot/pubNubPublishKey}
    PUBNUB_SUB: ${ssm:/contextubot/pubNubSubscribeKey}
    PUBNUB_SECRET: ${ssm:/contextubot/pubNubSecretKey}


package:
  individually: true
  exclude:
    - '*/**'

functions:
  # extract:
  #   handler: extract-audio/handler.extract
  #   module: extract-audio
  #   package:
  #     include:
  #       - 'extract-audio/*.py'
  #       - 'extract-audio/.requirements.zip'
  #       - 'extract-audio/ffmpeg/*'
  create:
    handler: handler.create
    module: audfprint
    package:
      include:
        - 'audfprint/*.py'
        - 'audfprint/.requirements.zip'
  match:
    handler: handler.match
    module: audfprint
    package:
      include:
        - 'audfprint/*.py'
        - 'audfprint/.requirements.zip'

plugins:
  - serverless-python-requirements
  - serverless-plugin-log-retention
  - serverless-stage-manager

custom:
  stages:
    - dev
    - staging
    - prod
  logRetentionInDays: 5
  pythonRequirements:
    dockerizePip: true
    slim: true
    zip: true
    useDownloadCache: true
    useStaticCache: true
