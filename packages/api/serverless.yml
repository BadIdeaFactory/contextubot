service:
  name: contextubot-api

provider:
  name: aws
  region: us-east-1
  tags:
    project: contextubot

  runtime: nodejs10.x
  timeout: 300
  stage: dev
  tracing: true

  environment:
    BUCKET_NAME: 'data.contextubot.net'
    EMBEDLY_KEY: ${ssm:/contextubot/embedlyKey}
    PUBNUB_PUB: ${ssm:/contextubot/pubNubPublishKey}
    PUBNUB_SUB: ${ssm:/contextubot/pubNubSubscribeKey}
    PUBNUB_SECRET: ${ssm:/contextubot/pubNubSecretKey}

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::data.contextubot.net'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::data.contextubot.net/*'
    - Effect: 'Allow'
      Action:
        - 'xray:PutTraceSegments'
        - 'xray:PutTelemetryRecords'
      Resource:
        - '*'
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:*:*:${self:custom.sqs}-export
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:*:*:${self:custom.sqs}-export-dl
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:*:*:${self:custom.sqs}-tva
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:*:*:${self:custom.sqs}-tva-dl
    - Effect: Allow
      Action:
        - sqs:*
      Resource: arn:aws:sqs:us-east-1:195195539908:dev-contextubot-worker-messages-match

package:
  individually: true
  include:
    - 'ffmpeg/*'

functions:
  tvaFeed:
    handler: tva.feed
    events:
      - schedule: rate(1 hour)
    environment:
      TVA_QUEUE: https://sqs.us-east-1.amazonaws.com/195195539908/${self:custom.sqs}-tva

  tvaFingerprint:
    handler: tva.fingerprint
    timeout: 300
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TVAQueue
              - Arn
          batchSize: 1
    deadLetter:
      targetArn:
        GetResourceArn: TVADeadLetterQueue

  query:
    handler: inspect.query
    timeout: 30
    events:
      - http:
          method: post
          path: query
          request:
            parameters:
              querystrings:
                url: true
          cors: true
    environment:
      EXPORT_QUEUE: https://sqs.us-east-1.amazonaws.com/195195539908/${self:custom.sqs}-export

  extract:
    handler: extract.audio
    timeout: 300
    events:
      - existingS3:
          bucket: 'data.contextubot.net'
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: query/
            - suffix: .json
      - sqs:
          arn:
            Fn::GetAtt:
              - ExtractQueue
              - Arn
          batchSize: 1
    deadLetter:
      targetArn:
        GetResourceArn: ExtractDeadLetterQueue

  search:
    handler: search.fingerprint
    events:
      - existingS3:
          bucket: 'data.contextubot.net'
          events:
            - s3:ObjectCreated:*
          rules:
            - prefix: wave/
            - suffix: .afpt
    environment:
      SEARCH_QUEUE: https://sqs.us-east-1.amazonaws.com/195195539908/dev-contextubot-worker-messages-match

resources:
  Resources:
    TVAQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: ${self:custom.sqs}-tva
        VisibilityTimeout: 300
    TVADeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}-tva-dl
    ExtractQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: ${self:custom.sqs}-export
        VisibilityTimeout: 300
    ExtractDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}-export-dl

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  sqs: ${self:custom.prefix}-messages
  # process: ${self:custom.prefix}-process
  # config: ${self:custom.prefix}-config
  # sns: ${self:custom.prefix}-trigger
  stages:
    - dev
    - staging
    - prod
  sqsTags:
    project: contextubot
  customDomain:
    domainName: api.contextubot.net
    stage: dev
    certificateArn: arn:aws:acm:us-east-1:195195539908:certificate/cb24598f-e14c-4856-a2d3-58ce80beef23
    createRoute53Record: true
    endpointType: 'regional'
  apiGatewayTags:
    project: contextubot
  logRetentionInDays: 5
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
    packager: 'yarn'
  scripts:
    hooks:
      'package:createDeploymentArtifacts': zip .serverless/extract.zip ffmpeg/ffmpeg ffmpeg/ffprobe ; zip .serverless/query.zip ffmpeg/ffprobe
      'deploy:finalize': serverless s3deploy

plugins:
  - serverless-plugin-scripts
  - serverless-webpack
  - serverless-tag-api-gateway
  - serverless-offline
  - serverless-plugin-log-retention
  - serverless-stage-manager
  - serverless-domain-manager
  - serverless-plugin-existing-s3
  - serverless-plugin-tracing
  - serverless-plugin-lambda-dead-letter
  - serverless-tag-sqs
  - serverless-plugin-cloudfront-lambda-edge
  # - serverless-pseudo-parameters
